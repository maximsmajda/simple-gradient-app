{"version":3,"sources":["components/Window.jsx","components/ColorPicker.jsx","components/Preview.jsx","components/Settings.jsx","App.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["Window","props","className","size","children","ColorPicker","id","dispatch","useDispatch","color","useSelector","state","onChange","type","payload","Preview","angle","gradientType","color1","color2","startingPoint","endingPoint","makeRgbaString","r","g","b","a","style","background","gradientString","Settings","name","value","e","target","checked","htmlFor","min","max","step","readOnly","cols","rows","autoCorrect","spellCheck","wrap","onClick","document","getElementById","select","execCommand","App","href","initialState","rootReducer","action","console","log","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store"],"mappings":"6MAEe,SAASA,EAAOC,GAC7B,OACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAA0B,QAAfD,EAAME,KAAiB,cAAgB,MAAvD,UACE,sBAAKD,UAAU,cAAf,UACE,sBAAMA,UAAU,YAChB,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,iBAEF,QAAfD,EAAME,KAAiB,qBAAKD,UAAU,aAAoB,QAE7D,qBAAKA,UAAU,UAAf,SAA0BD,EAAMG,c,WCUvBC,EAlBY,SAAC,GAAY,IAAVC,EAAS,EAATA,GACtBC,EAAWC,cACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMF,MAAMH,MAEjD,OACE,qBAAKJ,UAAU,eAAf,SACE,cAACF,EAAD,CAAQG,KAAK,QAAb,SACE,cAAC,IAAD,CACEM,MAAOA,EACPG,SAAU,SAACH,GACTF,EAAS,CAAEM,KAAM,eAAgBC,QAAS,CAAER,KAAIG,mBCX7C,SAASM,IACtB,IAAMC,EAAQN,aAAY,SAACC,GAAD,OAAWA,EAAMK,SACrCC,EAAeP,aAAY,SAACC,GAAD,OAAWA,EAAMM,gBAC5CC,EAASR,aAAY,SAACC,GAAD,OAAWA,EAAMF,MAAM,MAC5CU,EAAST,aAAY,SAACC,GAAD,OAAWA,EAAMF,MAAM,MAC5CW,EAAgBV,aAAY,SAACC,GAAD,OAAWA,EAAMS,iBAC7CC,EAAcX,aAAY,SAACC,GAAD,OAAWA,EAAMU,eAE3CC,EAAiB,SAACb,GACtB,MACE,QAAUA,EAAMc,EAAI,KAAOd,EAAMe,EAAI,KAAOf,EAAMgB,EAAI,KAAOhB,EAAMiB,EAAI,KA4B3E,OACE,qBAAKxB,UAAU,UAAf,SACE,cAACF,EAAD,CAAQG,KAAK,MAAb,SACE,qBACED,UAAU,mBACVyB,MAAO,CAAEC,WA7BM,SAACX,GACtB,MAAwB,WAAjBA,EACHA,EACE,aACAD,EACA,QACAM,EAAeJ,GACfE,EACA,MACAE,EAAeH,GACf,IACAE,EACA,KACFJ,EACE,aACAK,EAAeJ,GACfE,EACA,MACAE,EAAeH,GACf,IACAE,EACA,KAQqBQ,CAAeZ,UC3C/B,SAASa,IACpB,IAAMZ,EAASR,aAAY,SAACC,GAAD,OAAWA,EAAMF,MAAM,MAC5CU,EAAST,aAAY,SAACC,GAAD,OAAWA,EAAMF,MAAM,MAC5CQ,EAAeP,aAAY,SAACC,GAAD,OAAWA,EAAMM,gBAC5CD,EAAQN,aAAY,SAACC,GAAD,OAAWA,EAAMK,SACrCI,EAAgBV,aAAY,SAACC,GAAD,OAAWA,EAAMS,iBAC7CC,EAAcX,aAAY,SAACC,GAAD,OAAWA,EAAMU,eAE3Cd,EAAWC,cAEXc,EAAiB,SAACb,GACpB,MACI,QAAUA,EAAMc,EAAI,KAAOd,EAAMe,EAAI,KAAOf,EAAMgB,EAAI,KAAOhB,EAAMiB,EAAI,KAmC/E,OACI,qBAAKxB,UAAU,WAAf,SACI,eAACF,EAAD,CAAQG,KAAK,QAAb,UACI,qBAAKD,UAAU,kBAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,8CACA,sBAAKA,UAAU,gBAAf,UACI,uBACIW,KAAK,QACLP,GAAG,SACHyB,KAAK,eACLC,MAAM,SACNpB,SAAU,SAACqB,GACP1B,EAAS,CAAEM,KAAM,gBAAiBC,QAASmB,EAAEC,OAAOF,SAExDG,QAA0B,WAAjBlB,GAA6B,YAE1C,uBAAOmB,QAAQ,SAAf,oBAEA,uBACIvB,KAAK,QACLP,GAAG,SACHyB,KAAK,eACLC,MAAM,SACNpB,SAAU,SAACqB,GACP1B,EAAS,CAAEM,KAAM,gBAAiBC,QAASmB,EAAEC,OAAOF,SAExDG,QAA0B,WAAjBlB,GAA6B,YAE1C,uBAAOmB,QAAQ,SAAf,uBAEJ,sBAAKlC,UAAU,eAAf,UACI,sCACA,uBACIW,KAAK,QACLP,GAAG,QACHJ,UAAU,SACV6B,KAAK,QACLM,IAAI,IACJC,IAAI,MACJN,MAAOhB,EACPuB,KAAK,IACL3B,SAAU,SAACqB,GAAD,OACN1B,EAAS,CAAEM,KAAM,YAAaC,QAASmB,EAAEC,OAAOF,WAGxD,uBAAOI,QAAQ,QAAf,SAAwBpB,OAG5B,sBAAKd,UAAU,gBAAf,UACI,sCACA,uBACIW,KAAK,QACLP,GAAG,gBACHJ,UAAU,SACV6B,KAAK,gBACLM,IAAI,IACJC,IAAI,MACJN,MAAOZ,EACPmB,KAAK,IACL3B,SAAU,SAACqB,GAAD,OACN1B,EAAS,CACLM,KAAM,qBACNC,QAASmB,EAAEC,OAAOF,WAI9B,uBAAOI,QAAQ,iBAAf,SAAiChB,IAEjC,uBACIP,KAAK,QACLP,GAAG,cACHJ,UAAU,SACV6B,KAAK,cACLM,IAAI,IACJC,IAAI,MACJN,MAAOX,EACPkB,KAAK,IACL3B,SAAU,SAACqB,GAAD,OACN1B,EAAS,CACLM,KAAM,mBACNC,QAASmB,EAAEC,OAAOF,WAI9B,uBAAOI,QAAQ,cAAf,SAA8Bf,YAK1C,sBAAKnB,UAAU,kBAAf,UACI,0BACI8B,MA3HG,SAACf,GACpB,MAAwB,WAAjBA,EACDA,EACF,aACAD,EACA,QACAM,EAAeJ,GACf,IACAE,EACA,MACAE,EAAeH,GACf,IACAE,EACA,KACEJ,EACF,aACAK,EAAeJ,GACfE,EACA,MACAE,EAAeH,GACf,IACAE,EACA,KAqGmBQ,CAAeZ,GAAgB,IACtCuB,UAAQ,EACRT,KAAK,WACLzB,GAAG,WACHmC,KAAK,KACLC,KAAK,IACLC,YAAY,MACZC,WAAW,QACXC,KAAK,SAET,wBACI3C,UAAU,cACV4C,QAAS,WA7GdC,SAASC,eAAe,YAChCC,SACHF,SAASG,YAAY,SAyGT,uC,MCzHLC,MA1Bf,WACE,OACE,sBAAKjD,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,YAEjB,iCACE,6DAEF,iCACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAaI,GAAI,IACjB,cAAC,EAAD,CAAaA,GAAI,OAEnB,cAACS,EAAD,IACA,cAACe,EAAD,OAEF,iCACE,yCACU,mBAAGsB,KAAK,iCAAR,mC,cCzBZC,EAAe,CACjB5C,MAAO,CACL,CACEc,EAAG,IACHC,EAAG,GACHC,EAAG,IACHC,EAAG,GAEL,CACEH,EAAG,GACHC,EAAG,GACHC,EAAG,IACHC,EAAG,IAGPT,aAAc,SACdD,MAAO,MACPI,cAAe,IACfC,YAAa,MA2CFiC,MAxCf,WAAoD,IAA/B3C,EAA8B,uDAAtB0C,EAAcE,EAAQ,uCAC/C,OAAQA,EAAO1C,MACX,IAAK,eACD,IAAIJ,EAAQE,EAAMF,MAElB,OADAA,EAAM8C,EAAOzC,QAAQR,IAAMiD,EAAOzC,QAAQL,MAC1C,aACIA,SACGE,GAEX,IAAK,gBAGD,OAFA6C,QAAQC,IAAIF,EAAOzC,SAEZ,2BACAH,GADP,IAEIM,aAAcsC,EAAOzC,UAG7B,IAAK,YACD,kCACOH,GADP,IAEIK,MAAOuC,EAAOzC,UAGtB,IAAK,qBACD,kCACOH,GADP,IAEIS,cAAemC,EAAOzC,UAG9B,IAAK,mBACD,kCACOH,GADP,IAEIU,YAAakC,EAAOzC,UAG5B,QACI,OAAOH,ICtDJ+C,cAAYJ,EAAaK,OAAOC,8BAAgCD,OAAOC,gCCItFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJjB,SAASC,eAAe,W","file":"static/js/main.0ab2b167.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Window(props) {\n  return (\n    <div className=\"window\">\n      <div className={props.size === \"big\" ? \"bar bar-big\" : \"bar\"}>\n        <div className=\"bar-buttons\">\n          <span className=\"dot red\"></span>\n          <span className=\"dot yellow\"></span>\n          <span className=\"dot green\"></span>\n        </div>\n        {props.size === \"big\" ? <div className=\"text-bar\"></div> : null}\n      </div>\n      <div className=\"content\">{props.children}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Window from \"./Window\";\nimport { RgbaColorPicker } from \"react-colorful\";\n\nexport const ColorPicker = ({ id }) => {\n  const dispatch = useDispatch();\n  const color = useSelector((state) => state.color[id]);\n\n  return (\n    <div className=\"color-picker\">\n      <Window size=\"small\">\n        <RgbaColorPicker\n          color={color}\n          onChange={(color) => {\n            dispatch({ type: \"COLOR_CHANGE\", payload: { id, color } });\n          }}\n        />\n      </Window>\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Window from \"./Window\";\n\nexport default function Preview() {\n  const angle = useSelector((state) => state.angle);\n  const gradientType = useSelector((state) => state.gradientType);\n  const color1 = useSelector((state) => state.color[0]);\n  const color2 = useSelector((state) => state.color[1]);\n  const startingPoint = useSelector((state) => state.startingPoint);\n  const endingPoint = useSelector((state) => state.endingPoint);\n\n  const makeRgbaString = (color) => {\n    return (\n      \"rgba(\" + color.r + \", \" + color.g + \", \" + color.b + \", \" + color.a + \")\"\n    );\n  };\n\n  const gradientString = (gradientType) => {\n    return gradientType === \"linear\"\n      ? gradientType +\n          \"-gradient(\" +\n          angle +\n          \"deg, \" +\n          makeRgbaString(color1) +\n          startingPoint +\n          \"%, \" +\n          makeRgbaString(color2) +\n          \" \" +\n          endingPoint +\n          \"%)\"\n      : gradientType +\n          \"-gradient(\" +\n          makeRgbaString(color1) +\n          startingPoint +\n          \"%, \" +\n          makeRgbaString(color2) +\n          \" \" +\n          endingPoint +\n          \"%)\";\n  };\n\n  return (\n    <div className=\"preview\">\n      <Window size=\"big\">\n        <div\n          className=\"preview-gradient\"\n          style={{ background: gradientString(gradientType) }}\n        ></div>\n      </Window>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Window from \"./Window\";\n\nexport default function Settings() {\n    const color1 = useSelector((state) => state.color[0]);\n    const color2 = useSelector((state) => state.color[1]);\n    const gradientType = useSelector((state) => state.gradientType);\n    const angle = useSelector((state) => state.angle);\n    const startingPoint = useSelector((state) => state.startingPoint);\n    const endingPoint = useSelector((state) => state.endingPoint);\n\n    const dispatch = useDispatch();\n\n    const makeRgbaString = (color) => {\n        return (\n            \"rgba(\" + color.r + \", \" + color.g + \", \" + color.b + \", \" + color.a + \")\"\n        );\n    };\n\n    const gradientString = (gradientType) => {\n        return gradientType === \"linear\"\n            ? gradientType +\n            \"-gradient(\" +\n            angle +\n            \"deg, \" +\n            makeRgbaString(color1) +\n            \" \" +\n            startingPoint +\n            \"%, \" +\n            makeRgbaString(color2) +\n            \" \" +\n            endingPoint +\n            \"%)\"\n            : gradientType +\n            \"-gradient(\" +\n            makeRgbaString(color1) +\n            startingPoint +\n            \"%, \" +\n            makeRgbaString(color2) +\n            \" \" +\n            endingPoint +\n            \"%)\";\n    };\n\n    const copyToClipboard = () => {\n        const el = document.getElementById(\"textarea\");\n        el.select();\n        document.execCommand(\"copy\");\n    };\n\n    return (\n        <div className=\"settings\">\n            <Window size=\"small\">\n                <div className=\"settings-inputs\">\n                    <div className=\"settings-inputs-wrapper\">\n                        <p>gradient type</p>\n                        <div className=\"radio-buttons\">\n                            <input\n                                type=\"radio\"\n                                id=\"linear\"\n                                name=\"gradientType\"\n                                value=\"linear\"\n                                onChange={(e) => {\n                                    dispatch({ type: \"GRADIENT_TYPE\", payload: e.target.value });\n                                }}\n                                checked={gradientType === \"linear\" && \"checked\"}\n                            />\n                            <label htmlFor=\"linear\">linear</label>\n\n                            <input\n                                type=\"radio\"\n                                id=\"radial\"\n                                name=\"gradientType\"\n                                value=\"radial\"\n                                onChange={(e) => {\n                                    dispatch({ type: \"GRADIENT_TYPE\", payload: e.target.value });\n                                }}\n                                checked={gradientType === \"radial\" && \"checked\"}\n                            />\n                            <label htmlFor=\"radial\">radial</label>\n                        </div>\n                        <div className=\"angle-slider\">\n                            <p>angle</p>\n                            <input\n                                type=\"range\"\n                                id=\"angle\"\n                                className=\"slider\"\n                                name=\"angle\"\n                                min=\"0\"\n                                max=\"360\"\n                                value={angle}\n                                step=\"1\"\n                                onChange={(e) =>\n                                    dispatch({ type: \"SET_ANGLE\", payload: e.target.value })\n                                }\n                            />\n                            <label htmlFor=\"angle\">{angle}</label>\n                        </div>\n\n                        <div className=\"shift-sliders\">\n                            <p>shift</p>\n                            <input\n                                type=\"range\"\n                                id=\"startingPoint\"\n                                className=\"slider\"\n                                name=\"startingPoint\"\n                                min=\"0\"\n                                max=\"100\"\n                                value={startingPoint}\n                                step=\"1\"\n                                onChange={(e) =>\n                                    dispatch({\n                                        type: \"SET_STARTING_POINT\",\n                                        payload: e.target.value,\n                                    })\n                                }\n                            />\n                            <label htmlFor=\"starting-point\">{startingPoint}</label>\n\n                            <input\n                                type=\"range\"\n                                id=\"endingPoint\"\n                                className=\"slider\"\n                                name=\"endingPoint\"\n                                min=\"0\"\n                                max=\"100\"\n                                value={endingPoint}\n                                step=\"1\"\n                                onChange={(e) =>\n                                    dispatch({\n                                        type: \"SET_ENDING_POINT\",\n                                        payload: e.target.value,\n                                    })\n                                }\n                            />\n                            <label htmlFor=\"endingPoint\">{endingPoint}</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"gradient-result\">\n                    <textarea\n                        value={gradientString(gradientType) + \";\"}\n                        readOnly\n                        name=\"textarea\"\n                        id=\"textarea\"\n                        cols=\"10\"\n                        rows=\"3\"\n                        autoCorrect=\"off\"\n                        spellCheck=\"false\"\n                        wrap=\"soft\"\n                    ></textarea>\n                    <button\n                        className=\"copy-button\"\n                        onClick={() => {\n                            copyToClipboard();\n                        }}\n                    >\n                        Copy to clipboard\n                    </button>\n                </div>\n            </Window>\n        </div>\n    );\n}\n","import ColorPicker from \"./components/ColorPicker\";\nimport Preview from \"./components/Preview\";\nimport Settings from \"./components/Settings\";\n\nimport \"./styles/main.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"background\">\n        <div className=\"shape\"></div>\n      </div>\n      <header>\n        <h1>simple gradient generator</h1>\n      </header>\n      <main>\n        <div className=\"color-pickers\">\n          <ColorPicker id={0} />\n          <ColorPicker id={1} />\n        </div>\n        <Preview />\n        <Settings />\n      </main>\n      <footer>\n        <p>\n          made by <a href=\"https://github.com/maximsmajda\">Maxim Smajda</a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    color: [\n      {\n        r: 255,\n        g: 34,\n        b: 198,\n        a: 1\n      },\n      {\n        r: 89,\n        g: 15,\n        b: 216,\n        a: 1\n      }\n    ],\n    gradientType: 'linear',\n    angle: '307',\n    startingPoint: '0',\n    endingPoint: '81'\n  }\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case \"COLOR_CHANGE\":\n            var color = state.color\n            color[action.payload.id] = action.payload.color\n            return{\n                color,\n                ...state     \n            }\n        case \"GRADIENT_TYPE\":\n            console.log(action.payload)\n           \n            return {\n                ...state,\n                gradientType: action.payload,\n            }\n\n        case \"SET_ANGLE\":\n            return{\n                ...state,\n                angle: action.payload\n            }\n\n        case \"SET_STARTING_POINT\":\n            return{\n                ...state,\n                startingPoint: action.payload\n            }\n\n        case \"SET_ENDING_POINT\":\n            return{\n                ...state,\n                endingPoint: action.payload\n            }\n    \n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nexport default createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}